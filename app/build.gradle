apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "hurshi.github.com.daggervminjector"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly fileTree(dir: 'libs_compileonly', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.google.dagger:dagger:2.21'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.21'
    implementation 'com.google.dagger:dagger-android:2.21'
    implementation 'com.google.dagger:dagger-android-support:2.21'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.21'

    implementation project(':compiler')
    implementation project(':annotation')
    implementation project(':extension')


}

task daggerModuleSourceJar(type: Jar) {
//    from fileTree(dir: "${project.projectDir.absolutePath}/build/intermediates/classes/debug", include: '**/_GPDaggerVMInjectModule.class')
//    from fileTree(dir: "${project.projectDir.absolutePath}/build/intermediates/classes/debug", include: '**/*_GpSubcomponent.class')
//    from fileTree(dir: "${project.projectDir.absolutePath}/build/intermediates/classes/debug", include: '**/*_GpSubcomponent$Builder.class')

    from fileTree(dir: "${project.projectDir.absolutePath}/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes", include: '**/_GPDaggerVMInjectModule.class')
    from fileTree(dir: "${project.projectDir.absolutePath}/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes", include: '**/*_GpSubcomponent.class')
    from fileTree(dir: "${project.projectDir.absolutePath}/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes", include: '**/*_GpSubcomponent$Builder.class')

}

task toCopyJars(type: Copy) {
    from 'build/libs'
    into 'libs_compileonly'
    rename { String fileName ->
        fileName.replace(".jar", "DaggerInjections.jar")
    }
}
